name: Run Unit Tests

on:
  - push
  - pull_request

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SERVICE_NAME: my-container  # Specify the service container name
  
jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Use common steps
        uses: Snehashishdas97/CustomActions@v1
        
  build-and-push:
    runs-on: ubuntu-latest
    needs: test  # This ensures that the build-and-push job depends on the completion of the test job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  integration-test:
    runs-on: ubuntu-latest
    needs: build-and-push  # This ensures that the integration-test job depends on the completion of the build-and-push job

    services:
      my-container:
        image: ghcr.io/snehashishdas97/cbd3345_ica2:main
        ports:
          - 5000:5000
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Wait for the service to be ready
        run: |
          echo "Waiting for the service to be ready..."
          while ! nc -z localhost 5000; do sleep 10; done
          echo "Service is ready!"
          
      
      - name: Run integration tests
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"xmin": -2, "xmax": 2, "ymin": -2, "ymax": 2}' http://localhost:5000/plot
