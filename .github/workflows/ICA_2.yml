name: Run Unit Tests

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask numpy matplotlib

      - name: Run tests and generate reports
        run: |
          python -m unittest discover -p 'test_app.py' -v
          # You might need additional commands to generate test reports (e.g., coverage)

      - name: Archive test reports
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: .

  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u Snehashishdas97 --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --push -t ghcr.io/Snehashishdas97/flask_app_ICA:latest .
        env:
          DOCKER_BUILDKIT: 1

  integration-test:
    runs-on: self-hosted

    services:
      my-app:
        image: ghcr.io/Snehashishdas97/flask_app_ICA:latest
        ports:
          - 4000:80

    steps:
      - name: Wait for service container to be ready
        run: dockerize -wait tcp://localhost:4000 -timeout 1m

      - name: Run integration tests
        run: |
          # Assuming your Flask app has an endpoint at /plot
          response_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000/plot)

          if [ "$response_code" -eq 200 ]; then
            echo "Integration tests passed!"
          else
            echo "Integration tests failed! Response code: $response_code"
            exit 1
          fi
